<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.6.0/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<script src="js/main.js"></script>

<style>
#content-container {
    width: auto;
    float: none;
    display: block;
    margin-left: auto;
    margin-right: auto;
}

#editor-container {
    height: 450px;
}
</style>

<script>  
    
    $(document).ready(function(){
        // import counter class
        <%- include('counter.js'); %>
        // import showGroup class
        <%- include('showGroup.js'); %>

        var options = {
            debug: 'info',
            modules: {
                toolbar: '#toolbar-container',
                counter: {
                    container: '#counter',
                    unit: 'word'
                },
                // set history: delay set to 1000, undo would undo all changes that occured within the last 1000 milliseconds. 
                history: {
                    delay: 1000,
                    maxStack: 200,
                    userOnly: true
                },
                showgroup: {
                    container: '#showgroup',
                    // set word group rules
                    dicGroup: {
                        "Montreal" : "1",
                        "Toronto" : "1",
                        "Brossard" : "1",
                        "Ottawa" : "1",
                        "Sherbrooke" : "1"
                    }
                    
                }
            },
            placeholder: 'Compose an epic...',
            theme: 'snow'
        };
        //editor is a global variable for recall it in other functions       
        editor = new Quill('#editor-container', options);
            
        // Enable all tooptips
        // $('[data-toggle="tooltip"]').tooltip();
        
        //add click event for UndoByTime and Redo
        var click_undoByTime = document.getElementById("undoByTime_click");
        click_undoByTime.onclick = function() {
            console.log("Successful Undo By Timing...");
            editor.history.undo();
        }
        
        var click_redo = document.getElementById("redo_click");
        click_redo.onclick = function() {
            console.log("Successful Redo...");
            editor.history.redo();
        }

        //add undo and redo method of header menu
        var click_undoByTime2 = document.getElementById("undoByTime_click2");
        click_undoByTime2.onclick = function() {
            console.log("Successful Undo By Timing...");
            editor.history.undo();
        }
        var click_redo2 = document.getElementById("redo_click2");
        click_redo2.onclick = function() {
            console.log("Successful Redo...");
            editor.history.redo();
        }

    //add download file function
    var click_download = document.getElementById("download_click");
    click_download.onclick = function(){
        var frm = document.getElementById("form_download");  
        frm.action = "/download";  
        frm.method = "post";                 
        frm.submit(); 
    }
    var click_download2 = document.getElementById("download_click2");
    click_download2.onclick = function(){
        var frm = document.getElementById("form_download2");  
        frm.action = "/download";  
        frm.method = "post";                 
        frm.submit(); 
    }

    //save file function
    var click_save = document.getElementById("save_click");
    click_save.onclick = function(){
        //get content from the editor
        var getText = editor.getText();
        getText = getText.trim();
        var fsText = JSON.parse(JSON.stringify(getText));
        console.log("%%%%%%save_click to get fsText%%%%%% " + fsText);
        //submit form using POST method
        document.getElementById("download_input").value = fsText;
            
        var frm = document.getElementById("form_save");  
        frm.action = "/save";  
        frm.method = "post";                 
        frm.submit(); 
    }
    var click_save2 = document.getElementById("save_click2");
    click_save2.onclick = function(){
        //get content from the editor
        var getText = editor.getText();
        getText = getText.trim();
        var fsText = JSON.parse(JSON.stringify(getText));
        console.log("%%%%%%save_click to get fsText%%%%%% " + fsText);
        //submit form using POST method
        document.getElementById("download_input2").value = fsText;
            
        var frm = document.getElementById("form_save2");  
        frm.action = "/save2";  
        frm.method = "post";                 
        frm.submit(); 
    }




    }); //document

    
   

    // choose file to open
    function readFile(input) {
        let file = input.files[0];
        let reader = new FileReader();

        reader.readAsText(file);

        reader.onload = function() {
            
            //set Contents in Quill Editor
            var data = reader.result;
            //transfer to string and replace all \,
            var newdata = data.toString().replace(/\,/g, " ");
            console.log("###reading file content: ", newdata);
            editor.setContents([
                {insert : newdata}
            ])
        };

        reader.onerror = function() {
            console.log(reader.error);
        };
        
    }

    // switch button for backgroud color
    var btn = document.getElementById('btn');
    var body = document.querySelector('body');
    var isLight = true;
    btn.onclick = function() {
        if (isLight == true) {
            document.body.classList.add('night');
            // body.style.backgroundColor = '#000';
            isLight = false;
        } else {
            document.body.classList.remove('night');
            // body.style.backgroundColor = '#fff';
            isLight = true;
        }
    }

</script> 
